{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\\\u05E6\\u05D1\\u05D9\\u05E7\\u05D9\\\\todo-app\\\\client\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import TaskItem from './TaskItem';\n// import AddTask from './AddTask';\n// import axios from 'axios';\n// import './TaskList.css';\n\n// const TaskList = () => {\n//     const [tasks, setTasks] = useState([]);\n\n//     // הטעינה של המשימות כשהקומפוננטה נטענת\n//     useEffect(() => {\n//         axios.get('http://localhost:5000/tasks')\n//             .then(response => {\n//                 setTasks(response.data);\n//             })\n//             .catch(error => console.error('Error fetching tasks:', error));\n//     }, []);\n\n//     // הוספת משימה חדשה\n//     const handleAddTask = (newTask) => {\n//         axios.post('http://localhost:5000/tasks', newTask)\n//             .then(response => {\n//                 setTasks([...tasks, response.data]);\n//             })\n//             .catch(error => console.error('Error adding task:', error));\n//     };\n\n//     // עדכון משימה\n//     const handleEditTask = (updatedTask) => {\n//         axios.put(`http://localhost:5000/tasks/${updatedTask.task_id}`, updatedTask)\n//             .then(response => {\n//                 const updatedTasks = tasks.map(task =>\n//                     task.task_id === updatedTask.task_id ? response.data : task\n//                 );\n//                 setTasks(updatedTasks);  // עדכון המשימות במצב\n//             })\n//             .catch(error => console.error('Error updating task:', error));\n//     };\n\n//     // מחיקת משימה\n//     const handleDeleteTask = (taskId) => {\n//         axios.delete(`http://localhost:5000/tasks/${taskId}`)\n//             .then(() => {\n//                 const updatedTasks = tasks.filter(task => task.task_id !== taskId);\n//                 setTasks(updatedTasks);\n//             })\n//             .catch(error => console.error('Error deleting task:', error));\n//     };\n\n//     return (\n//         <div className=\"task-list-container\">\n//             <div className=\"add-task-container\">\n//                 <AddTask onAddTask={handleAddTask} />\n//             </div>\n//             <div className=\"task-list-display\">\n//                 {tasks.map(task => (\n//                     <TaskItem\n//                         key={task.task_id}\n//                         task={task}\n//                         onDeleteTask={handleDeleteTask}\n//                         onEditTask={handleEditTask}  // pass the edit function here\n//                     />\n//                 ))}\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default TaskList;\n\nimport React, { useState, useEffect } from 'react';\nimport TaskItem from './TaskItem';\nimport AddTask from './AddTask';\nimport axios from 'axios';\nimport './TaskList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  user\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n\n  // אם אין משתמש, הצג הודעת טעינה\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 16\n    }, this);\n  }\n\n  // הטעינה של המשימות כשהקומפוננטה נטענת\n  useEffect(() => {\n    axios.get(`http://localhost:5000/tasks?userId=${user.uid}`).then(response => {\n      setTasks(response.data);\n    }).catch(error => console.error('Error fetching tasks:', error));\n  }, [user]);\n\n  // הוספת משימה חדשה\n  const handleAddTask = newTask => {\n    axios.post('http://localhost:5000/tasks', {\n      ...newTask,\n      userId: user.uid\n    }).then(response => {\n      setTasks([...tasks, response.data]);\n    }).catch(error => console.error('Error adding task:', error));\n  };\n\n  // עדכון משימה\n  const handleEditTask = updatedTask => {\n    axios.put(`http://localhost:5000/tasks/${updatedTask.task_id}`, updatedTask).then(response => {\n      const updatedTasks = tasks.map(task => task.task_id === updatedTask.task_id ? response.data : task);\n      setTasks(updatedTasks); // עדכון המשימות במצב\n    }).catch(error => console.error('Error updating task:', error));\n  };\n\n  // מחיקת משימה\n  const handleDeleteTask = taskId => {\n    axios.delete(`http://localhost:5000/tasks/${taskId}`).then(() => {\n      const updatedTasks = tasks.filter(task => task.task_id !== taskId);\n      setTasks(updatedTasks);\n    }).catch(error => console.error('Error deleting task:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-task-container\",\n      children: /*#__PURE__*/_jsxDEV(AddTask, {\n        onAddTask: handleAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list-display\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: task,\n        onDeleteTask: handleDeleteTask,\n        onEditTask: handleEditTask\n      }, task.task_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","TaskItem","AddTask","axios","jsxDEV","_jsxDEV","TaskList","user","_s","tasks","setTasks","children","fileName","_jsxFileName","lineNumber","columnNumber","get","uid","then","response","data","catch","error","console","handleAddTask","newTask","post","userId","handleEditTask","updatedTask","put","task_id","updatedTasks","map","task","handleDeleteTask","taskId","delete","filter","className","onAddTask","onDeleteTask","onEditTask","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/צביקי/todo-app/client/src/components/TaskList.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import TaskItem from './TaskItem';\r\n// import AddTask from './AddTask';\r\n// import axios from 'axios';\r\n// import './TaskList.css';\r\n\r\n// const TaskList = () => {\r\n//     const [tasks, setTasks] = useState([]);\r\n\r\n//     // הטעינה של המשימות כשהקומפוננטה נטענת\r\n//     useEffect(() => {\r\n//         axios.get('http://localhost:5000/tasks')\r\n//             .then(response => {\r\n//                 setTasks(response.data);\r\n//             })\r\n//             .catch(error => console.error('Error fetching tasks:', error));\r\n//     }, []);\r\n\r\n//     // הוספת משימה חדשה\r\n//     const handleAddTask = (newTask) => {\r\n//         axios.post('http://localhost:5000/tasks', newTask)\r\n//             .then(response => {\r\n//                 setTasks([...tasks, response.data]);\r\n//             })\r\n//             .catch(error => console.error('Error adding task:', error));\r\n//     };\r\n\r\n//     // עדכון משימה\r\n//     const handleEditTask = (updatedTask) => {\r\n//         axios.put(`http://localhost:5000/tasks/${updatedTask.task_id}`, updatedTask)\r\n//             .then(response => {\r\n//                 const updatedTasks = tasks.map(task =>\r\n//                     task.task_id === updatedTask.task_id ? response.data : task\r\n//                 );\r\n//                 setTasks(updatedTasks);  // עדכון המשימות במצב\r\n//             })\r\n//             .catch(error => console.error('Error updating task:', error));\r\n//     };\r\n\r\n//     // מחיקת משימה\r\n//     const handleDeleteTask = (taskId) => {\r\n//         axios.delete(`http://localhost:5000/tasks/${taskId}`)\r\n//             .then(() => {\r\n//                 const updatedTasks = tasks.filter(task => task.task_id !== taskId);\r\n//                 setTasks(updatedTasks);\r\n//             })\r\n//             .catch(error => console.error('Error deleting task:', error));\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"task-list-container\">\r\n//             <div className=\"add-task-container\">\r\n//                 <AddTask onAddTask={handleAddTask} />\r\n//             </div>\r\n//             <div className=\"task-list-display\">\r\n//                 {tasks.map(task => (\r\n//                     <TaskItem\r\n//                         key={task.task_id}\r\n//                         task={task}\r\n//                         onDeleteTask={handleDeleteTask}\r\n//                         onEditTask={handleEditTask}  // pass the edit function here\r\n//                     />\r\n//                 ))}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default TaskList;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport TaskItem from './TaskItem';\r\nimport AddTask from './AddTask';\r\nimport axios from 'axios';\r\nimport './TaskList.css';\r\n\r\nconst TaskList = ({ user }) => {\r\n    const [tasks, setTasks] = useState([]);\r\n\r\n    // אם אין משתמש, הצג הודעת טעינה\r\n    if (!user) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    // הטעינה של המשימות כשהקומפוננטה נטענת\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:5000/tasks?userId=${user.uid}`)\r\n            .then(response => {\r\n                setTasks(response.data);\r\n            })\r\n            .catch(error => console.error('Error fetching tasks:', error));\r\n    }, [user]);\r\n\r\n    // הוספת משימה חדשה\r\n    const handleAddTask = (newTask) => {\r\n        axios.post('http://localhost:5000/tasks', { ...newTask, userId: user.uid })\r\n            .then(response => {\r\n                setTasks([...tasks, response.data]);\r\n            })\r\n            .catch(error => console.error('Error adding task:', error));\r\n    };\r\n\r\n    // עדכון משימה\r\n    const handleEditTask = (updatedTask) => {\r\n        axios.put(`http://localhost:5000/tasks/${updatedTask.task_id}`, updatedTask)\r\n            .then(response => {\r\n                const updatedTasks = tasks.map(task =>\r\n                    task.task_id === updatedTask.task_id ? response.data : task\r\n                );\r\n                setTasks(updatedTasks);  // עדכון המשימות במצב\r\n            })\r\n            .catch(error => console.error('Error updating task:', error));\r\n    };\r\n\r\n    // מחיקת משימה\r\n    const handleDeleteTask = (taskId) => {\r\n        axios.delete(`http://localhost:5000/tasks/${taskId}`)\r\n            .then(() => {\r\n                const updatedTasks = tasks.filter(task => task.task_id !== taskId);\r\n                setTasks(updatedTasks);\r\n            })\r\n            .catch(error => console.error('Error deleting task:', error));\r\n    };\r\n\r\n    return (\r\n        <div className=\"task-list-container\">\r\n            <div className=\"add-task-container\">\r\n                <AddTask onAddTask={handleAddTask} />\r\n            </div>\r\n            <div className=\"task-list-display\">\r\n                {tasks.map(task => (\r\n                    <TaskItem\r\n                        key={task.task_id}\r\n                        task={task}\r\n                        onDeleteTask={handleDeleteTask}\r\n                        onEditTask={handleEditTask}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}